[{"C:\\xampp\\htdocs\\react-notes\\src\\index.js":"1","C:\\xampp\\htdocs\\react-notes\\src\\components\\App.js":"2","C:\\xampp\\htdocs\\react-notes\\src\\components\\Accordion.js":"3","C:\\xampp\\htdocs\\react-notes\\src\\components\\Search.js":"4","C:\\xampp\\htdocs\\react-notes\\src\\components\\Dropdown.js":"5","C:\\xampp\\htdocs\\react-notes\\src\\components\\Translate.js":"6","C:\\xampp\\htdocs\\react-notes\\src\\components\\Convert.js":"7","C:\\xampp\\htdocs\\react-notes\\src\\components\\Route.js":"8","C:\\xampp\\htdocs\\react-notes\\src\\components\\Header.js":"9","C:\\xampp\\htdocs\\react-notes\\src\\components\\Link.js":"10"},{"size":160,"mtime":1612507745055,"results":"11","hashOfConfig":"12"},{"size":1505,"mtime":1613470228624,"results":"13","hashOfConfig":"12"},{"size":918,"mtime":1613030812591,"results":"14","hashOfConfig":"12"},{"size":2375,"mtime":1613282433063,"results":"15","hashOfConfig":"12"},{"size":1778,"mtime":1613468361283,"results":"16","hashOfConfig":"12"},{"size":1203,"mtime":1613467048310,"results":"17","hashOfConfig":"12"},{"size":1228,"mtime":1613468218009,"results":"18","hashOfConfig":"12"},{"size":731,"mtime":1613566426654,"results":"19","hashOfConfig":"12"},{"size":468,"mtime":1613469987514,"results":"20","hashOfConfig":"12"},{"size":665,"mtime":1613566327156,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1j2totu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\react-notes\\src\\index.js",[],["45","46"],"C:\\xampp\\htdocs\\react-notes\\src\\components\\App.js",[],"C:\\xampp\\htdocs\\react-notes\\src\\components\\Accordion.js",[],"C:\\xampp\\htdocs\\react-notes\\src\\components\\Search.js",["47","48"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\n// import axios from \"axios\";\r\n\r\nconst Search = (props) => \r\n{\r\n    const [term, setTerm] = useState(\"pakistan\");\r\n    const [debouncedTerm, setDebouncedTerm] = useState(term);\r\n    const [results, setResults] = useState([]);\r\n\r\n\r\n    useEffect( () => \r\n    {\r\n        // Make an async request\r\n        const search  = async () => {\r\n            const {data} = await axios.get(\"https://en.wikipedia.org/w/api.php\", {\r\n                params: {\r\n                    action: \"query\",\r\n                    list: \"search\",\r\n                    origin: \"*\",\r\n                    format: \"json\",\r\n                    srsearch: term,\r\n                }\r\n            });\r\n            \r\n            if(data.query.search)\r\n            {\r\n                console.log(data.query.search);\r\n                setResults(data.query.search);\r\n            }\r\n        };\r\n        const timeoutId = setTimeout(()=>{\r\n            if(term)\r\n                search();\r\n        }, 1000);\r\n\r\n        // CLEAN UP function\r\n        return () => {\r\n            console.log(\"CLEANUP\");\r\n            clearTimeout(timeoutId);\r\n        };\r\n    }, [term]);\r\n\r\n    const renderedResults = results.map((result, index) => {\r\n        return (\r\n            <div className=\"item\" key={index}>\r\n                <div className=\"right floated content\">\r\n                    <a href={`https://en.wikipedia.org?curid=${result.pageid}`} className=\"ui botton\">Go</a>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"header\">\r\n                        { result.title }\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <span dangerouslySetInnerHTML={{ __html: result.snippet }}></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui form\">\r\n                <div className=\"field\">\r\n                    <label>Enter Search Term:</label>\r\n                    <input value={term} onChange={ e => setTerm(e.target.value) } className=\"input\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"ui celled list\">\r\n                { renderedResults }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search;","C:\\xampp\\htdocs\\react-notes\\src\\components\\Dropdown.js",[],"C:\\xampp\\htdocs\\react-notes\\src\\components\\Translate.js",["49"],"// AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Dropdown from './Dropdown';\r\nimport Convert from \"./Convert\";\r\n\r\nconst options = [\r\n    {\r\n        label: \"Africans\",\r\n        value: \"af\"\r\n    },\r\n    {\r\n        label: \"Arabic\",\r\n        value: \"ar\"\r\n    },\r\n    {\r\n        label: \"Hindi\",\r\n        value: \"hi\"\r\n    },\r\n];\r\n\r\nconst Translate = () => {\r\n\r\n    const [language, setLanguage] = useState(options[0]);\r\n    const [text, setText] = useState(\"\");\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"ui form\">\r\n                <div className=\"field\">\r\n                    <label> Enter text: </label>\r\n                    <input value={text} onChange={ (e)=>{setText(e.target.value)} } />\r\n                </div>\r\n            </div>\r\n            <Dropdown \r\n                label=\"Select a language\"\r\n                selected={language} \r\n                onSelectedChange={setLanguage} \r\n                options={options} \r\n            />\r\n            <div className=\"ui header\">\r\n                <Convert language={language} text={text} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Translate;","C:\\xampp\\htdocs\\react-notes\\src\\components\\Convert.js",[],"C:\\xampp\\htdocs\\react-notes\\src\\components\\Route.js",[],"C:\\xampp\\htdocs\\react-notes\\src\\components\\Header.js",[],"C:\\xampp\\htdocs\\react-notes\\src\\components\\Link.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":8,"column":12,"nodeType":"56","messageId":"57","endLine":8,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":8,"column":27,"nodeType":"56","messageId":"57","endLine":8,"endColumn":43},{"ruleId":"54","severity":1,"message":"59","line":3,"column":27,"nodeType":"56","messageId":"57","endLine":3,"endColumn":36},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'debouncedTerm' is assigned a value but never used.","Identifier","unusedVar","'setDebouncedTerm' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]